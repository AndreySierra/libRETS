top_srcdir=@top_srcdir@
abs_top_srcdir=@abs_top_srcdir@

SHELL = /bin/sh

prefix=@prefix@
datadir=@datadir@
datarootdir=@datarootdir@
exec_prefix=@exec_prefix@
bindir=@bindir@
mandir=@mandir@
sysconfdir=@sysconfdir@
docdir=$(datadir)/doc
libdir=@libdir@
includedir=@includedir@

INSTALL=@INSTALL@
INSTALL_PROGRAM=@INSTALL_PROGRAM@
INSTALL_DATA=@INSTALL_DATA@
MKINSTALLDIRS=$(abs_top_srcdir)/project/build/mkinstalldirs

AR=@AR@
CC=@CC@
CXX=@CXX@
CFLAGS=@CFLAGS@ @DEFS@
CXXFLAGS=@CXXFLAGS@ @DEFS@
CPPFLAGS=@CPPFLAGS@
LIBS=@LIBS@
LDFLAGS=@LDFLAGS@
ARCH=@ARCH@
ARCH_FLAGS=@ARCH_FLAGS@
LIBRETS_MT=@LIBRETS_MT@
LIBRETS_THREAD_FLAGS=@LIBRETS_THREAD_FLAGS@

USE_DEPENDS_IN=@USE_DEPENDS@
USE_EXAMPLES=@USE_EXAMPLES@
USE_SQL_COMPILER=@USE_SQL_COMPILER@
USE_SWIG_BINDINGS=@USE_SWIG_BINDINGS@

SWIG=@SWIG@
HAVE_JAVA=@HAVE_JAVA@
JAVAC=@JAVAC@
JAR=@JAR@
JAVA_INCLUDES=@JAVA_INCLUDES@
HAVE_DOTNET=@HAVE_DOTNET@
CSC=@CSC@
MCS=@MCS@
SNK_FILE=@SNK_FILE@
HAVE_PERL=@HAVE_PERL@
PERL=@PERL@
HAVE_PHP=@HAVE_PHP@
PHP=@PHP@
HAVE_PYTHON=@HAVE_PYTHON@
PYTHON=@PYTHON@
HAVE_PYTHON3=@HAVE_PYTHON3@
PYTHON3=@PYTHON3@
HAVE_RUBY=@HAVE_RUBY@
RUBY=@RUBY@
HAVE_NODE=@HAVE_NODE@
NODE_V8_VERSION=@NODE_V8_VERSION@
NODEGYP=@NODEGYP@

TARGET=unix
TARGET_CFLAGS=-DTARGET_UNIX

BOOST_CFLAGS=@BOOST_CFLAGS@
BOOST_LIBS=@BOOST_LIBS@
BOOST_FILESYSTEM=@BOOST_FILESYSTEM@
BOOST_SYSTEM=@BOOST_SYSTEM@
BOOST_THREAD=@BOOST_THREAD@
BOOST_PROGRAM_OPTIONS=@BOOST_PROGRAM_OPTIONS@

CURL_CFLAGS=@CURL_CFLAGS@
CURL_LDFLAGS=@CURL_LIBS@

EXPAT_CFLAGS=@EXPAT_CFLAGS@
EXPAT_LDFLAGS=@EXPAT_LIBS@

ANTLR=@ANTLR@
ANTLR_CFLAGS=@ANTLR_CFLAGS@
ANTLR_LDFLAGS=@ANTLR_LIBS@

HAVE_CPPUNIT=@HAVE_CPPUNIT@
CPPUNIT_CFLAGS=@CPPUNIT_CFLAGS@
CPPUNIT_LDFLAGS=@CPPUNIT_LIBS@

HAVE_DOXYGEN=@HAVE_DOXYGEN@
DOXYGEN=doxygen

# Put targets here so that zsh can complete on them, as zsh won't
# follow the include directives.
#
# These use a separate make to only enable dependency checking for
# targets that actually compile something.
all:
	@$(MAKE) USE_DEPENDS=$(USE_DEPENDS_IN) _all
debug:
	@$(MAKE) USE_DEPENDS=$(USE_DEPENDS_IN) _debug
build:
	@$(MAKE) USE_DEPENDS=$(USE_DEPENDS_IN) _build
install:
	@$(MAKE) USE_DEPENDS=$(USE_DEPENDS_IN) _install
uninstall:
	@$(MAKE) USE_DEPENDS=$(USE_DEPENDS_IN) _uninstall
test:
	@$(MAKE) USE_DEPENDS=$(USE_DEPENDS_IN) _test

test-network:
	@$(MAKE) USE_DEPENDS=$(USE_DEPENDS_IN) _test-network

test-ssl:
	@$(MAKE) USE_DEPENDS=$(USE_DEPENDS_IN) _test-ssl

run-server:
	@$(MAKE) USE_DEPENDS=$(USE_DEPENDS_IN) _run_httpServer

run-ssl-server:
	@$(MAKE) USE_DEPENDS=$(USE_DEPENDS_IN) _run_SSLServer

help:
	@echo Targets are:
	@echo all
	@echo clean
	@echo dist
	@echo doc
	@echo doc-api
	@echo install
	@echo uninstall
	@echo test
	@echo test-network
	@echo test-ssl
	@echo run-server
	@echo run-ssl-server

doc: _doc
doc-api: _doc-api

dist: _dist _distwin
clean: _clean
distclean: _distclean
maintainer-clean: _maintainer-clean

include $(abs_top_srcdir)/project/build/version.mk
include $(abs_top_srcdir)/project/build/sources.mk
include $(abs_top_srcdir)/project/build/rules.mk
